Scripts below are based on Amazon AWS, you can easly change it to othe kinds
of infrastructures, check the "Requirements" for more information

De-register:

It is based on 2 scripts, one that gets a list of Amazon EC2 instances from a
given account and the list of node of a given Zabbix group and compare both
lists to decide which machines to deregister or disable the monitoring in
Zabbix server. If you are not using Amazon you need to change the way the lists
are built and compared.
**** Be careful, it is beta, you have 2 options: remove or disable the hosts
**** Removing is better, but it is dangerous, the default is to disable
**** If you want to delete the hosts, uncomment the last lines of the script

Notes:

   - This script is based in the EC2 Instance-Id, it is stored as the machine
     name on Zabbix and it is used to be compated to the Amazon's running 
     instances. If you use a diferent name for machines, the name will not 
     match with the Amazon list and the machine will be disabled or removed
     in the Zabbix server and your historical data will be lost. You can 
     change both scripts to have a better list and comparsion
   - There is a template for the deregister items, usually it is linked into
     the Template_Scripts, the template used to a host that will take care of 
     all stand-alone monitoring (like cloudwatch and group aggreagations)
     * THIS ITEM IS DISABLED BY DEFAULT, YOU HAVE TO ENABLE THIS ITEM AND
       CONFIGURE ITS MACROS *
   - Amazon's API is unpredictable getting terminated instances, so a complete
     list of instances is necessary
   - It is recommended only for autoscaling groups

Requirements:
   - An IAM account able to list all instances, nothing more
   - Python-boto in the script server (will be installed by chef)
   - An user with RW rights to the API, to the Discovered Hosts's group, to
     the Templates group (all your templates should be add to that group) and
     to all other groups involved

How to:

  Installing the agent using Chef:
    - Added to the host that will handle all aggregations and stand-alone
      monitorings the recipe zabbix-aws::agent-deregister
    - Added the accounts configurations (1 to 5 accounts) to your role. The
      "myrole.rb" example that changes the default attributes of the cookbook
      zabbix-aws is placed at chef/roles/myrole.rb

  Installing the agent manually:

    - create the directory /etc/zabbix/agentd.d/
        $ sudo mkdir /etc/zabbix/agentd.d
    - copy and edit the file:
        cookbooks/zabbix-aws/templates/default/deregister/deregister.conf.erb
      to:
        /etc/zabbix/agentd.d/deregister.conf

    - copy and edit the files:
        cookbooks/zabbix-aws/templates/default/deregister/zabbix_deregister.sh
        cookbooks/zabbix-aws/templates/default/deregister/
                                                   zabbix_get_instances.py.erb
      to:
       /usr/local/bin/zabbix_deregister.sh
       /usr/local/bin/zabbix_get_instances.py

    - include the configurations in the /etc/zabbix/agentd.conf:
         $ echo 'Include=/etc/zabbix/agentd.d/' |
           sudo tee -a /etc/zabbix/agentd.conf
    - fix permissions and restart the agent
         $ sudo chown -R zabbix /etc/zabbix/agentd.d
         $ sudo chmod 600 /etc/zabbix/agentd.d/*
         $ sudo chown zabbix:root /usr/local/bin/zabbix*
         $ sudo chmod 750 /usr/local/bin/zabbix*
         $ sudo /etc/init.d/zabbix-agent restart

  Installing the template for 1 deregistration group/account:
    - Import the template into the Zabbix server
    - Link it to the host you installed the agent
      Zabbix server is recomended
    - Configure the template's macros:
      {$DE_MYACCOUNT}, {$DE_MYGROUP}

  Installing the template for 2 deregistration groups/accounts:
    - Import the template into the Zabbix server
    - Create a new template called Template_DeRegisterMyGroup1
    - Link the Template_DeRegister on it
    - Configure the template's macros:
      {$DE_MYACCOUNT}, {$DE_MYGROUP}
    - repeat for DeRegisterMyGroup2


Workflow:
   - The template asks, every minute, asks for thee key auto.deregister 
   - The key opens the script to processed with the following actions:
      - Get list of EC2 instances using {$DE_MYACCOUNT}
      - Get the list of Zabbix nodes in the groups {$DE_MYGROUP}
   - Compare both lists, if there is an instance present in the Group and not
     present at EC2 anymore, it is disabled (or removed) from the Zabbix server
   * Use aggregated monitoring to persist teminated instances values
