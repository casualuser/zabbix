***** You can find information about the recipes from the templates
***** The only recipe the information is right here is the Auto-register
***** and the De-register scripts


***** NOT TESTED YET AFTER MIGRATED TO GITHUB *****


Auto-register:

It's a recipe you attach at your role to try only once to register the node 
into the Zabbix Server

Requirements:

This first version is very simple, based on wget and shell script, you may
need those tools at the bootstrap
   - An user at Zabbix with API access and RW rights to add machines to your
     group and the Discovered Hosts' group
   - Since it is only one script for all hosts, I didn't make it template
     and you have to edit it directly
   - Include this the zabbix-aws::auto-register recipe at the end of your
     recipe

Workflow:
   - search for the node's zabbix tag
   - if registered, do nothing
   - if not registered (tag doesn't contain REGISTERED)
       - Search for a Group with the tag's name
       - Search for a Template with the tag's name
       - Register the machine into Zabbix
       - Tag the host as REGISTERED

It is originally built for AWS, but there is not direct relation to it
and works in any Linux environment 


De-register:

***** NOT YET MIGRATED TO GITHUB ******

It's a recipe that only copies an additional configuration and a de-register
script to the zabbix::script recipe. This is directly related to EC2.
It also copy a 2 new scripts to the node

Requirement:
   - An IAM account with able to list all instances
   - Python-boto in the script server
   - An user with RW rights to the API, to your group,
     and the Discovered Hosts's group
   - Even though python is there, it is an shell script that handles the API
   - Since it is only one script for all hosts, I didn't make it template
     and you have to edit it directly


Note: Amazon's API is unpredictable for terminated instances, so a complete
      list of instances is necessary

Workflow:
   - Each minute get the list of EC2 instances
   - Get the list of instances of a certain configurable Group
       - recomended only for autoscaling groups, you may want to know check
         when machines of regular groups dies
   - Compare both lists, if there is an instance present in the Group and not
     present at EC2 anymore, it is removed from the Zabbix server
   - Aggregated monitoring persists the instances values


TODO:
   - test it again
   - check if we need can configure the groups directly to the templates
   - check if it is easier to get host information from chef/ohai
       - or leave it like that to depend on chef/ohai ?
